{"version":3,"sources":["webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js","webpack:///./src/pages/blogs.js"],"names":["Blog","id","title","featuredImage","date","nodes","tags","slug","excerpt","to","className","key","fluid","node","localFile","childImageSharp","dangerouslySetInnerHTML","__html","slice","map","tag","Fragment","name","Blogs","blogs","showLink","Title","blog","data","useStaticQuery","description","allWpPost","edges"],"mappings":"iKAkDeA,EA7CF,SAAC,GAQP,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,MACAC,EAKI,EALJA,cACAC,EAII,EAJJA,KACQC,EAGJ,EAHJC,KAAQD,MACRE,EAEI,EAFJA,KACAC,EACI,EADJA,QAEA,OACE,kBAAC,OAAD,CAAMC,GAAE,IAAMF,EAAQG,UAAU,OAAOC,IAAKV,GAC1C,iCACGE,GACC,kBAAC,IAAD,CACES,MAAOT,EAAcU,KAAKC,UAAUC,gBAAgBH,MACpDF,UAAU,aAGd,yBAAKA,UAAU,aACb,4BAAKR,GACL,yBAAKc,wBAAyB,CAAEC,OAAQT,KACxC,yBAAKE,UAAU,eACb,2BACGL,EAAMa,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAG,OACxB,kBAAC,IAAMC,SAAP,CAAgBV,IAAKS,EAAIE,MAAOF,EAAIE,KAApC,SAGJ,2BAAIlB,QCRDmB,IAlBM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOtB,EAAsB,EAAtBA,MAAOuB,EAAe,EAAfA,SACpC,OACE,6BAASf,UAAU,WACjB,kBAACgB,EAAA,EAAD,CAAOxB,MAAOA,IACd,yBAAKQ,UAAU,+BACZc,EAAML,KAAI,SAAAQ,GACT,OAAO,kBAAC,EAAD,eAAMhB,IAAKgB,EAAKd,KAAKZ,IAAQ0B,EAAKd,WAG5CY,GACC,kBAAC,OAAD,CAAMhB,GAAG,QAAQC,UAAU,kBAA3B,Y,kCChBR,gFAuDeV,UAhDF,WACX,IAAM4B,EAAOC,yBAAe,cAqC5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3B,MAAM,OAAO4B,YAAY,2CAC9B,6BAASpB,UAAU,aACjB,kBAAC,IAAD,CAAOc,MAAOI,EAAKG,UAAUC,MAAO9B,MAAM","file":"component---src-pages-blogs-js-bc617ee84baa8e67e29d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n\nconst Blog = ({\n  id,\n  title,\n  featuredImage,\n  date,\n  tags: { nodes },\n  slug,\n  excerpt,\n}) => {\n  return (\n    <Link to={`/${slug}`} className=\"blog\" key={id}>\n      <article>\n        {featuredImage && (\n          <Image\n            fluid={featuredImage.node.localFile.childImageSharp.fluid}\n            className=\"blog-img\"\n          />\n        )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <div dangerouslySetInnerHTML={{ __html: excerpt }} />\n          <div className=\"blog-footer\">\n            <p>\n              {nodes.slice(0, 1).map(tag => (\n                <React.Fragment key={tag.name}>{tag.name} </React.Fragment>\n              ))}\n            </p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  nodes: PropTypes.arrayOf(PropTypes.object),\n  excerpt: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  featuredImage: PropTypes.object,\n}\n\nexport default Blog\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.node.id} {...blog.node} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          blogs\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Blogs\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nconst Blog = () => {\n  const data = useStaticQuery(graphql`\n    query getPosts($catname: String = \"posts\") {\n      allWpPost(\n        filter: {\n          categories: { nodes: { elemMatch: { name: { eq: $catname } } } }\n        }\n        sort: { fields: date, order: DESC }\n      ) {\n        edges {\n          node {\n            featuredImage {\n              node {\n                localFile {\n                  childImageSharp {\n                    fluid {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n            id\n            slug\n            title\n            date(formatString: \"MMM Do, YYYY\")\n            content\n            tags {\n              nodes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" description=\"Blogs on ReactJS and web developement.\" />\n      <section className=\"blog-page\">\n        <Blogs blogs={data.allWpPost.edges} title=\"blog\" />\n      </section>\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}