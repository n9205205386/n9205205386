{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","content","title","nodes","tags","excerpt","featuredImage","index","start","indexOf","end","url","slice","className","fluid","node","localFile","childImageSharp","style","color","data-sal","data-sal-delay","data-sal-easing","dangerouslySetInnerHTML","__html","map","item","key","name","href","Projects","projects","showLink","Title","project","id","to","Hero","data","useStaticQuery","borderRadius","width","file","icon","text","Services","services","service","Layout","SEO","description","edges","Blogs","blogs","posts","Blog","date","slug","tag","Fragment","blog"],"mappings":"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","file":"component---src-pages-index-js-004056efb9d8984ade14.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\n\nconst Project = ({\n  content,\n  title,\n  tags: { nodes },\n  excerpt,\n  featuredImage,\n  index,\n}) => {\n  const start = excerpt.indexOf(\">\")\n  const end = excerpt.indexOf(\"<\", 1)\n  const url = excerpt.slice(start + 1, end)\n\n  return (\n    <article className=\"project\">\n      {featuredImage && (\n        <Image\n          fluid={featuredImage.node.localFile.childImageSharp.fluid}\n          className=\"project-img\"\n        />\n      )}\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3\n          style={{ color: \"#2caeba\" }}\n          data-sal=\"slide-up\"\n          data-sal-delay=\"400\"\n          data-sal-easing=\"easeInSine\"\n        >\n          {title}\n        </h3>\n        <div\n          data-sal=\"slide-left\"\n          data-sal-delay=\"800\"\n          data-sal-easing=\"easeOutCubic\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n        <div className=\"project-stack\">\n          {nodes &&\n            nodes.map(item => {\n              return <span key={item.name}>{item.name}</span>\n            })}\n        </div>\n        <div className=\"project-links\">\n          <a href={url}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  featuredImage: PropTypes.object.isRequired,\n  nodes: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default Project\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Title from \"./Title\"\nimport Project from \"./Project\"\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return (\n            <Project key={project.node.id} index={index} {...project.node} />\n          )\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport SocialLinks from \"../constants/socialLinks\"\n\nconst Hero = () => {\n  const data = useStaticQuery(graphql`\n    {\n      file(relativePath: { eq: \"hero-img.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div className=\"underline\"></div>\n            <h1>I'm Gaurav</h1>\n            <h4>ReactJS Developer</h4>\n            <Link className=\"btn\" to=\"/contact\">\n              contact me\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <Image\n          style={{ borderRadius: \"50%\", width: \"70%\" }}\n          fluid={data.file.childImageSharp.fluid}\n          className=\"hero-img\"\n        />\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaAndroid, FaReact } from \"react-icons/fa\"\n\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"WEBSITE DESIGNING\",\n    text: `Stunning design specifically made for your business to stand out`,\n  },\n  {\n    id: 2,\n    icon: <FaReact className=\"service-icon\" />,\n    title: \"WEB APPS\",\n    text: `Let's make your idea into reality, web app development using MERN stack`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"NATIVE APPS\",\n    text: `ios/android app development as per your requirements`,\n  },\n]\n","import React from \"react\"\n\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\n\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\n// import Expertise from \"../components/Expertise\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query getFeaturedProjectsAndGetFeaturedPosts {\n      projects: allWpPost(\n        filter: {\n          categories: {\n            nodes: { elemMatch: { name: { eq: \"featured-projects\" } } }\n          }\n        }\n      ) {\n        edges {\n          node {\n            featuredImage {\n              node {\n                localFile {\n                  childImageSharp {\n                    fluid {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n            id\n            title\n            content\n            tags {\n              nodes {\n                name\n              }\n            }\n            excerpt\n          }\n        }\n      }\n      posts: allWpPost(\n        filter: {\n          categories: {\n            nodes: { elemMatch: { name: { eq: \"featured-posts\" } } }\n          }\n        }\n        limit: 3\n        sort: { fields: date, order: DESC }\n      ) {\n        edges {\n          node {\n            featuredImage {\n              node {\n                localFile {\n                  childImageSharp {\n                    fluid {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n            id\n            slug\n            title\n            date(formatString: \"MMM Do, YYYY\")\n            excerpt\n            tags {\n              nodes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        description=\"Responsible freelancer for your Website Designing, Application development, SEO at affordable rates, and quick deployment.\"\n      />\n      <Hero />\n      <Services />\n      {/* <Expertise /> */}\n      <Projects\n        projects={data.projects.edges}\n        title=\"featured projects\"\n        showLink\n      />\n      <Blogs blogs={data.posts.edges} title=\"latest articles\" showLink />\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n\nconst Blog = ({\n  id,\n  title,\n  featuredImage,\n  date,\n  tags: { nodes },\n  slug,\n  excerpt,\n}) => {\n  return (\n    <Link to={`/${slug}`} className=\"blog\" key={id}>\n      <article>\n        {featuredImage && (\n          <Image\n            fluid={featuredImage.node.localFile.childImageSharp.fluid}\n            className=\"blog-img\"\n          />\n        )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <div dangerouslySetInnerHTML={{ __html: excerpt }} />\n          <div className=\"blog-footer\">\n            <p>\n              {nodes.slice(0, 1).map(tag => (\n                <React.Fragment key={tag.name}>{tag.name} </React.Fragment>\n              ))}\n            </p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  nodes: PropTypes.arrayOf(PropTypes.object),\n  excerpt: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  featuredImage: PropTypes.object,\n}\n\nexport default Blog\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.node.id} {...blog.node} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          blogs\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Blogs\n"],"sourceRoot":""}